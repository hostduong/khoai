{% set title = "ƒêƒÉng k√Ω t√†i kho·∫£n | Gem.id.vn - H·ªá th·ªëng Email T·ª± ƒê·ªông" %}
{% set description = "T·∫°o t√†i kho·∫£n m·ªõi tr√™n Gem.id.vn ‚Äì h·ªá th·ªëng email t·ª± ƒë·ªông, b·∫£o m·∫≠t cao, chuy√™n cho MMO v√† doanh nghi·ªáp." %}
{% set keywords = "Gem.id.vn, ƒëƒÉng k√Ω email, h·ªá th·ªëng email t·ª± ƒë·ªông, MMO" %}
{% set page_url = "/register" %}
{% set og_image = "/img/logo.png" %}
{% include "head-meta.njk" %}
  <body class="bg-light">
{% include "head.njk" %}

<section class="section-py bg-body landing-reviews pb-0">
  <div class="container d-flex justify-content-center align-items-center p-3">
    <div class="row">
      <div class="col-sm-12">
        <div class="card">
          <div class="card-body">
            <div class="mx-auto pt-4" style="max-width: 480px;">
              <h4 class="mb-1 text-center">Ch√†o m·ª´ng ƒë·∫øn v·ªõi GemID! üëã</h4>
              <p class="mb-6 text-center">Vui l√≤ng ƒëƒÉng k√Ω ƒë·ªÉ ti·∫øp t·ª•c.</p>

              <form id="formAuthentication" class="mb-6" autocomplete="off">
                <!-- T√™n ƒëƒÉng nh·∫≠p -->
                <div class="mb-6">
                  <label for="username" class="form-label">T√™n ƒëƒÉng nh·∫≠p</label>
                  <input type="text" class="form-control"
                         id="username" name="username"
                         minlength="6" maxlength="30"
                         pattern="^[a-z0-9_.]{6,30}$"
                         placeholder="T√™n ƒëƒÉng nh·∫≠p (a-z, 0-9, _ .)" required>
                  <div class="invalid-feedback" id="error-username"></div>
                </div>
                <!-- H·ªç v√† t√™n -->
                <div class="mb-6">
                  <label for="fullname" class="form-label">H·ªç v√† t√™n</label>
                  <input type="text" class="form-control"
                         id="fullname" name="fullname"
                         minlength="6" maxlength="50"
                         placeholder="H·ªç v√† t√™n ƒë·∫ßy ƒë·ªß" required>
                  <div class="invalid-feedback" id="error-fullname"></div>
                </div>
                <!-- Email -->
                <div class="mb-6">
                  <label for="email" class="form-label">Email</label>
                  <input type="email" class="form-control"
                         id="email" name="email"
                         maxlength="100"
                         placeholder="Nh·∫≠p email" required>
                  <div class="invalid-feedback" id="error-email"></div>
                </div>
                <!-- M·∫≠t kh·∫©u -->
                <div class="mb-6 form-password-toggle">
                  <label for="password" class="form-label">M·∫≠t kh·∫©u</label>
                  <div class="input-group input-group-merge">
                    <input type="password" class="form-control"
                           id="password" name="password"
                           minlength="8" maxlength="30"
                           pattern="^[a-zA-Z0-9~!@#$%^&*()_+]{8,30}$"
                           placeholder="M·∫≠t kh·∫©u m·∫°nh (8-30 k√Ω t·ª±)" required>
                    <span class="input-group-text cursor-pointer" onclick="togglePassword('password')">
                      <i class="ti ti-eye-off"></i>
                    </span>
                  </div>
                  <div class="invalid-feedback" id="error-password"></div>
                </div>
                <!-- Nh·∫≠p l·∫°i m·∫≠t kh·∫©u -->
                <div class="mb-6 form-password-toggle">
                  <label for="confirm_password" class="form-label">Nh·∫≠p l·∫°i m·∫≠t kh·∫©u</label>
                  <div class="input-group input-group-merge">
                    <input type="password" class="form-control"
                           id="confirm_password" name="confirm_password"
                           minlength="8" maxlength="30"
                           placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u" required>
                    <span class="input-group-text cursor-pointer" onclick="togglePassword('confirm_password')">
                      <i class="ti ti-eye-off"></i>
                    </span>
                  </div>
                  <div class="invalid-feedback" id="error-confirm-password"></div>
                </div>
                <!-- S·ªë ƒëi·ªán tho·∫°i -->
                <div class="mb-6">
                  <label for="phone" class="form-label">S·ªë ƒëi·ªán tho·∫°i</label>
                  <input type="tel" class="form-control"
                         id="phone" name="phone"
                         pattern="^[0-9]{10,15}$"
                         placeholder="S·ªë ƒëi·ªán tho·∫°i 10-15 s·ªë" required>
                  <div class="invalid-feedback" id="error-phone"></div>
                </div>
                <!-- PIN (8 s·ªë) -->
                <div class="mb-6 form-password-toggle">
                <label for="pin" class="form-label">PIN (8 s·ªë)</label>
                <div class="input-group input-group-merge">
                <input type="password" class="form-control"
                 id="pin" name="pin"
                 pattern="^[0-9]{8}$"
                 minlength="8" maxlength="8"
                    placeholder="Nh·∫≠p PIN 8 s·ªë" inputmode="numeric" required>
    <span class="input-group-text cursor-pointer" onclick="togglePassword('pin')">
      <i class="ti ti-eye-off"></i>
    </span>
  </div>
  <div class="invalid-feedback" id="error-pin"></div>
</div>

                <!-- ƒêi·ªÅu kho·∫£n -->
                <div class="mb-6 mt-8">
                  <div class="form-check mb-8 ms-2">
                    <input class="form-check-input" type="checkbox"
                           id="terms-conditions" name="terms" required>
                    <label class="form-check-label" for="terms-conditions">
                      T√¥i ƒë·ªìng √Ω v·ªõi <a href="/terms" target="_blank">ƒêi·ªÅu kho·∫£n v√† ƒëi·ªÅu ki·ªán</a>
                    </label>
                    <div class="invalid-feedback" id="error-terms"></div>
                  </div>
                </div>
                <!-- Captcha Cloudflare Turnstile -->
                <div class="mb-6">
                  <div class="input-group mb-4 input-section w-100">
                    <div class="cf-turnstile w-100"
                         data-sitekey="0x4AAAAAABiYUvkjZoEsX0vR"
                         data-size="flexible" data-theme="light"
                         data-callback="onCaptchaSuccess"
                         data-expired-callback="onCaptchaExpired"
                         data-error-callback="onCaptchaExpired"></div>
                  </div>
                  <div class="invalid-feedback" id="error-captcha"></div>
                </div>
                <!-- N√∫t ƒëƒÉng k√Ω -->
                <button class="btn btn-primary d-grid w-100" id="register-btn" type="submit" disabled>
                  ƒêƒÉng k√Ω
                </button>
                <div id="form-message" class="text-center mt-2"></div>
              </form>
              <p class="text-center mt-2">
                <span>B·∫°n ƒë√£ c√≥ t√†i kho·∫£n?</span>
                <a href="/login"><span>ƒêƒÉng nh·∫≠p ngay</span></a>
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
function togglePassword(id) {
  var input = document.getElementById(id);
  input.type = input.type === "password" ? "text" : "password";
}

// --- Captcha & Validate ---
let captchaOk = false;
function onCaptchaSuccess(token) {
  captchaOk = true;
  updateRegisterBtn();
}
function onCaptchaExpired() {
  captchaOk = false;
  updateRegisterBtn();
}
function updateRegisterBtn() {
  const form = document.getElementById('formAuthentication');
  let valid = true;
  if (!form.username.value.match(/^[a-z0-9_.]{6,30}$/)) valid = false;
  if (form.fullname.value.length < 6 || form.fullname.value.length > 50) valid = false;
  if (!form.email.value.match(/^[^@]+@[^@]+\.[^@]+$/)) valid = false;
  if (!form.password.value.match(/^[a-zA-Z0-9~!@#$%^&*()_+]{8,30}$/)) valid = false;
  if (form.password.value !== form.confirm_password.value) valid = false;
  if (!form.phone.value.match(/^[0-9]{10,15}$/)) valid = false;
  if (!form.pin.value.match(/^[0-9]{8}$/)) valid = false;
  if (!form["terms-conditions"].checked) valid = false;
  if (!captchaOk) valid = false;
  document.getElementById('register-btn').disabled = !valid;
}
document.getElementById('formAuthentication').addEventListener('input', updateRegisterBtn);

// --- X·ª≠ l√Ω submit AJAX ---
document.getElementById('formAuthentication').addEventListener('submit', async function(e) {
  e.preventDefault();
  document.getElementById('register-btn').disabled = true;
  document.getElementById('form-message').innerText = "ƒêang x·ª≠ l√Ω...";

  // L·∫•y token captcha
  const captchaToken = document.querySelector('.cf-turnstile input[name="cf-turnstile-response"]')?.value || "";

  const form = e.target;
  const body = {
    username: form.username.value.trim(),
    fullname: form.fullname.value.trim(),
    email: form.email.value.trim(),
    password: form.password.value,
    confirm_password: form.confirm_password.value,
    phone: form.phone.value.trim(),
    pin: form.pin.value.trim(),
    "cf-turnstile-response": captchaToken
  };

  try {
    const res = await fetch('/api/register', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(body)
    });
    const data = await res.json();
    if (data.success) {
      document.getElementById('form-message').innerText = "üéâ ƒêƒÉng k√Ω th√†nh c√¥ng!";
      // C√≥ th·ªÉ redirect sau v√†i gi√¢y:
      setTimeout(() => window.location.href = '/login', 2000);
    } else {
      document.getElementById('form-message').innerText = data.message || "C√≥ l·ªói x·∫£y ra, th·ª≠ l·∫°i!";
      document.getElementById('register-btn').disabled = false;
    }
  } catch (err) {
    document.getElementById('form-message').innerText = "Kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c server!";
    document.getElementById('register-btn').disabled = false;
  }
});
</script>
// H√†m reset captcha sau m·ªói submit (d√π th√†nh c√¥ng hay l·ªói)
function resetCaptcha() {
  // Cloudflare Turnstile s·∫Ω t·ª± th√™m object window.turnstile n·∫øu ƒë√£ load xong
  if (window.turnstile && typeof window.turnstile.reset === "function") {
    // L·∫•y ID widget ƒë·∫ßu ti√™n tr√™n trang (n·∫øu nhi·ªÅu widget, truy·ªÅn ID c·ª• th·ªÉ)
    const widget = document.querySelector(".cf-turnstile");
    if (widget) window.turnstile.reset(widget);
  }
}

// ƒê·∫∑t l·∫°i captcha sau m·ªói submit (th√†nh c√¥ng ho·∫∑c l·ªói)
document.getElementById('formAuthentication').addEventListener('submit', async function(e) {
  e.preventDefault();
  document.getElementById('register-btn').disabled = true;
  document.getElementById('form-message').innerText = "ƒêang x·ª≠ l√Ω...";

  // L·∫•y token captcha m·ªõi nh·∫•t
  const captchaToken = document.querySelector('.cf-turnstile input[name="cf-turnstile-response"]')?.value || "";

  // ...c√°c b∆∞·ªõc l·∫•y gi√° tr·ªã form...

  try {
    const res = await fetch('/api/register', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(body)
    });
    const data = await res.json();
    if (data.success) {
      document.getElementById('form-message').innerText = "üéâ ƒêƒÉng k√Ω th√†nh c√¥ng!";
      setTimeout(() => window.location.href = '/login', 2000);
    } else {
      document.getElementById('form-message').innerText = data.message || "C√≥ l·ªói x·∫£y ra, th·ª≠ l·∫°i!";
      document.getElementById('register-btn').disabled = false;
      resetCaptcha(); // Lu√¥n reset captcha sau khi submit l·ªói!
    }
  } catch (err) {
    document.getElementById('form-message').innerText = "Kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c server!";
    document.getElementById('register-btn').disabled = false;
    resetCaptcha(); // Lu√¥n reset captcha sau khi submit l·ªói!
  }
});

// ƒê·∫£m b·∫£o captcha lu√¥n m·ªõi khi F5 (trang load l·∫°i Turnstile auto reset, kh√¥ng c·∫ßn code th√™m)
// N·∫øu mu·ªën ch·ªß ƒë·ªông reset khi trang v·ª´a load:
window.addEventListener('DOMContentLoaded', resetCaptcha);

<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>

{% include "footer.njk" %}
  </body>
{% include "footer-meta.njk" %}
